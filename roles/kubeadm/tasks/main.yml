
- name: Get dpkg arch
  command: dpkg --print-architecture
  register: dpkg_arch

- name: Add cri-o repo
  apt_repository:
    repo: deb [arch={{dpkg_arch.stdout}}] https://download.docker.com/linux/debian {{ docker_dist }} {{docker_channel}}
    filename: docker
    state: present
    update_cache: true
  tags: [ never, cri ]

- include: docker.yml

- name: Pass bridged IPv4 traffic to iptables chains
  sysctl:
    name: net.bridge.bridge-nf-call-iptables
    value: 1
    state: present

- name: Install apt-transport-https
  apt:
    name: apt-transport-https
    state: present

- name: Download GCR key
  get_url:
    url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
    dest: /tmp/gcr.gpg
    force: yes

- name: Install GCR key
  apt_key:
    file: /tmp/gcr.gpg
    state: present

- name: Add Kubernetes to Available apt Sources
  template:
    src: kubernetes.list
    dest: /etc/apt/sources.list.d/kubernetes.list
    owner: root
    group: root
    mode: 0644

# - name: Configure cgroup driver
#   lineinfile:
#     dest: /etc/default/kubelet
#     line: KUBELET_EXTRA_ARGS=--cgroup-driver=systemd
#     #line: KUBELET_EXTRA_ARGS=--feature-gates="AllAlpha=false,RunAsGroup=true" --container-runtime=remote --cgroup-driver=systemd --container-runtime-endpoint='unix:///var/run/crio/crio.sock' --runtime-request-timeout=5m

- name: Install k8s, y'all
  apt:
    name: ["kubelet={{ kubernetes_version }}-00", "kubeadm={{ kubernetes_version }}-00", "kubectl={{ kubernetes_version }}-00"]
    state: present
    update_cache: yes
    force: yes
